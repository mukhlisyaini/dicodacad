dasar pemrograman web
Memanfaatkan website sebagai alat editing photo. https://pixlr.com/

Server
server sebenarnya lebih merujuk pada sebuah software yang dapat menghubungkan sebuah komputer dengan komputer lain. Jadi penekanan sebuah server bukan pada sebuah komputernya, melainkan pada rule atau fungsi dari sebuah komputer tersebut.

HTTP Server
HTTP Server merupakan sebuah software yang dapat menerima transaksi dari HyperText Transfer Protocol dalam suatu website atau biasa disebut dengan “HTTP Server”. Banyak software yang dapat melakukan tugas tersebut. Apache adalah salah satunya yang cukup friendly, gratis, dan tersedia untuk seluruh komputer dengan basis UNIX (termasuk MacOS) dan juga Windows.



DNS Server
Setiap perangkat baik komputer, smartphone, modem, maupun router yang terkoneksi internet akan memiliki IP Address. Contohnya, komputer yang menjadi host dari dicoding.com memiliki IP 104.28.20.105, Jika kita menggunakan IP tersebut untuk mengakses sebuah website, tentu akan repot. Mengingat kumpulan angka memang dapat seorang manusia lakukan, tapi bagaimana jika harus mengingat 10 IP? Untuk mengatasinya, dibuatlah Domain Name System (DNS) yang dapat mengubah/mengarahkan website melalui sebuah nama domain (“dicoding.com”). 



Client
Jika ada penyedia (server) tentu ada pengguna bukan? Perangkat yang meminta (request) suatu layanan tertentu ke suatu server disebut dengan client. Browser merupakan salah satu client yang memanfaatkan HTTP Server dalam transaksi datanya. Jelas, tujuannya adalah untuk mengolah, menampilkan, dan melakukan interaksi dengan dokumen yang disediakan oleh web server. Layaknya sebuah pelukis, browser mampu menyajikan informasi dalam bentuk visual yang indah bersumber dari data mentah yang diperoleh dari server.


Server-side dan Client-side
Dalam pengembangan web, terdapat istilah “Client-Side” atau “Server-side”. Hal ini merujuk pada sebuah proses yang dilakukan pada sisi client atau di sisi server. Untuk client side, semua proses terjadi di sisi pengguna, client meminta data ke server di mana data yang dikirimkan nanti diolah di sisi client. Biasanya data yang diolah dalam bentuk HTML, CSS, dan JavaScript. 

Sedangkan untuk server side, semua proses yang terjadi dilakukan di sisi server. Server side bertanggung jawab untuk merespon data yang diminta oleh client side. Biasanya server side merupakan tempat di mana terjadinya interaksi pada database, sehingga sisi client tidak mengetahui prosesnya dan memang tidak boleh tahu. Client hanya diberikan sebuah data hasil olahan dari sisi server.

gambar anatomi web
Main idea: https://www.freecodecamp.org/news/learn-html-in-5-minutes-ccd378d2ab72/

Silabus
Pada modul 2 dan 3 kita akan mempelajari rangkaian penggunaan HTML pada website. Mulai dari pembuatan berkas HTML, mengenal dan menggunakan elemen, serta menampilkan gambar dan penyusunan layout. Kemudian pada modul 4 dan 5 kita akan mempelajari penerapan styling pada website untuk mempercantik dan membantu dalam penyusunan website. Sampai modul ini, kita akan membuat sebuah halaman website yang menarik.

Pada modul 6, kita akan belajar bagaimana cara menyusun layout yang responsif menggunakan flexbox. Selain itu juga terdapat praktik membuat sebuah layout dasar kalkulator pada website.

Sedangkan JavaScript akan dibahas pada modul 7. Di  sana kita akan belajar dasar-dasar dari bahasa pemrograman JavaScript, pengenalan syntax, penggunaan variabel, tipe data yang ada, iterator, dll. Selain itu kita juga akan belajar bagaimana cara memanipulasi “DOM” dengan menggunakan JavaScript sehingga dapat membuat website yang interaktif. 

Pada modul 8, kita akan mempelajari cara mengelola sebuah data atau objek pada local storage ataupun session storage dengan memanfaatkan Web Storage. Sampai modul ini, kita akan membuat sebuah proyek kalkulator sederhana dengan memanfaatkan Web Storage untuk menyimpan histori perhitungannya.

Dan pada akhir pembelajaran, untuk lulus dari kelas ini, terdapat submission alias proyek akhir yang harus Anda kirimkan. Proyek tersebut akan kemudian kami review guna menentukan kelulusan Anda.

teks editor
Visual Studio Code
Visual Studio Editor merupakan sebuah text editor yang dikembangkan oleh Microsoft. Dalam text editor ini terdapat fitur debugging, Git control, syntax highlighting, code completion, snippets, dan code refactoring. Visual Studio Code tersedia untuk sistem operasi Windows, Mac maupun Linux, dan tentunya text editor ini bisa kita gunakan secara gratis. Untuk mengunduhnya silakan kunjungi website berikut: https://code.visualstudio.com/

Atom Editor
Atom merupakan text editor gratis dan juga open source untuk Windows, Linux, dan MacOS. Sama seperti Visual Studio Editor, kedua text editor ini merupakan editor yang populer digunakan oleh web developer. Untuk mengunduhnya, silakan kunjungi website berikut: https://atom.io/

Emacs
Editor ini mungkin tidak secanggih opsi-opsi sebelumnya dalam menuliskan kode HTML, CSS, dan JavaScript. Namun, jika kalian tertarik belajar melalui proses tanpa fitur yang mempermudah kita dalam menuliskan sebuah kode, maka text editor ini cocok untuk dicoba. Emacs memiliki fitur yang tidak disangka-sangka untuk sebuah text editor, seperti news reader, kalkulator, dan fitur untuk enkripsi/dekripsi file. Emacs tersedia untuk Windows, Macs, maupun Linux secara gratis. Untuk mencobanya, kalian bisa mengunjungi halaman website berikut: https://www.gnu.org/software/emacs/

Developer Tools atau Dev Tools merupakan alat yang dapat digunakan untuk melakukan debugging pada sebuah website. Dev Tools ini merupakan tools yang andal dalam mencari suatu bugs dan memperbaikinya. Bahkan kita dapat mensimulasikan tampilan website pada sebuah layar smartphone, sehingga tak perlu repot-repot memakai smartphone untuk melihat responsibilitas website yang kita kembangkan.

Inline Formatting Text
Kita sudah belajar mengidentifikasi penggunaan elemen pada konten yang major (besar) dengan menerapkan semantic HTML untuk mengorganisasikan kontennya. Sekarang kita akan mengenal beberapa formatting text yang digunakan dalam sebuah baris teks (inline text). 

Sebelum menjelaskan elemen inline untuk formatting text yang dapat digunakan, sepertinya kita perlu membahas sekilas mengenai block dan inline.

Standarnya elemen HTML memiliki dua sifat yaitu block dan inline. Elemen yang memiliki sifat block selalu membuat baris baru ketika menampilkannya, contohnya seperti elemen paragraf, list, heading, dan lainnya. Berlawanan dengan elemen yang memiliki sifat inline, elemen ini tidak menambahkan baris baru ketika dibuat. Apa saja elemen tersebut? Mari kita bahas satu persatu.



Anchor
Apa itu anchor? Anchor (jangkar) merupakan elemen yang digunakan untuk membuat sebuah hyperlink ke halaman atau website lain, file, alamat email, atau URL lainnya. Untuk menggunakan elemen ini kita gunakan tag <a>...</a> bersama dengan atribut href untuk menetapkan sebuah target yang akan dituju. 

Atribut

Nilai

Deskripsi

download

filename

Menginstruksikan browser untuk mengunduh pada URL yang ditetapkan daripada mengarahkannya.  

href

URL

Menetapkan target yang akan diarahkan/unduh ketika pengguna menekan hyperlink.

hreflang

language_code

Menetapkan bahasa dari dokumen target.

ping

list_of_URLs

Menetapkan URL yang akan diberitahu dengan mengirimkan post request ping pada body oleh browser (berjalan di belakang layar) ketika target URL pada hyperlink ditekan. Biasanya atribut ini digunakan untuk pelacakan.

referrerpolicy

no-referrer,

no-referrer-when-downgrade,

origin,

origin-when-cross-origin,

unsafe-url

Menetapkan referensi untuk dikirim pada target.

rel

alternate,

author,

bookmark,

external,

help,

license,

next,

nofollow,

noreferrer,

noopener,

prev,

search,

tag


Menetapkan hubungan antara halaman yang ditampilkan dengan target.

target

_blank,

_parent,

_self,

_top

Menetapkan lokasi ketika membuka target contohnya pada sebuah tab, window atau pada tab itu sendiri.

media

media_type

Menetapkan tipe media yang digunakan pada target.

Emphasized text
Gunakan elemen <em> untuk menunjukan bagian kata yang perlu kita tekankan. Elemen ini menunjukan stress emphasis atau konten/kata yang perlu mendapatkan penekanan atau perhatian khusus. Berikut contoh penggunaannya.

Important text
Gunakan elemen <strong> untuk menunjukan sebuah teks yang begitu penting (strong importance), serius, ataupun mendesak. Dalam arti teks tersebut harus dapat perhatian lebih dari teks biasa lainnya.
Standarnya pada browser sebuah teks yang diberi markup <strong> akan ditampilkan secara tebal. Dan ketika pengguna menggunakan pembaca layar (screen reader), suara yang terdengar akan berbeda. Ini mengartikan bahwa teks tersebut penting tidak hanya sekedar tebal.

Short quotations
Gunakan elemen <q> untuk menandai sebuah kutipan dalam sebuah teks. Elemen short quations berbeda dengan <blockquote>. Elemen ini digunakan untuk kutipan pendek yang terletak di dalam baris (inline).

Citation
Selain sebuah atribut, <cite> juga merupakan sebuah elemen yang digunakan untuk sebuah rujukan pada sebuah dokumen, contohnya sebuah buku, majalah, artikel dan lainnya.

Defining terms
Elemen <dfn> digunakan ketika mendefinisikan sebuah istilah (term). Elemen ini harus terletak pada elemen lain yang menaunginya. Contohnya pada sebuah elemen <p> atau elemen <section>. Berikut contoh penggunaannya:

Subscript dan Superscript
Subscript <sub> dan superscript <sup> merupakan elemen yang dapat membuat teks yang ditampilkan nampak kecil, dengan posisi di bawah (sub) atau di atas (sup) dari teks biasanya. Elemen ini digunakan untuk menunjukan sebuah rumus kimia ataupun matematika.

Highlighted text
Untuk menandai atau menyorot sebuah teks kita bisa menggunakan elemen <mark>. Elemen ini digunakan ketika terdapat sebuah teks yang memiliki peran penting, biasanya teks tersebut merupakan bagian yang paling relevan atau penting dalam sebuah konteks kalimat.

Line Break
Terkadang kita mungkin perlu menambahkan sebuah baris baru pada sebuah baris teks (termasuk di dalam paragraf), tetapi kita mengetahui bahwa browser akan mengabaikan sebuah penulisan spasi ganda ataupun garis baru, sehingga kita memerlukan sebuah tanda yang dapat digunakan untuk memberitahu browser untuk “Tambahkan garis baru di sini!”.

Inline line break element atau <br> dapat digunakan untuk memberitahu browser untuk memberikan sebuah garis baru pada baris teks. Sama seperti gambar, elemen ini merupakan elemen kosong sehingga kita tidak membutuhkan sebuah tag penutup.

Semantic HTML - Mengorganisasikan Halaman Konten
Seperti yang sudah disebutkan pada modul sebelumnya, sebuah website memiliki hierarki konten yang sama seperti dokumen sehari-hari yang kita baca, misalnya seperti majalah, dan koran. Sehingga, hierarki pada sebuah website merupakan hal yang penting. Namun, tentu saja elemen yang terdapat pada HTML perlu kita kelompokkan menjadi beberapa bagian.

Sebelum HTML5, kita mengelompokan suatu elemen HTML yang memiliki konten serupa dalam sebuah generic element <div> (kita akan membahas div secara dalam nanti). Kita mengelompokkan sebuah header website dengan menggunakan <div>, membuat sebuah navigation dengan menggunakan <div> juga, artikel atau section yang lainnya. Kita biasa gunakan atribut class atau id untuk mengindikasikan peran dari elemen tersebut. Hal ini membuat struktur pada website hilang (semantic meaningless).

Pada HTML5 kita dikenalkan pada beberapa elemen yang dapat digunakan dalam mengelompokkan sebuah elemen dengan lebih jelas dan memiliki arti (semantic HTML). Elemen-elemen ini memiliki nama sesuai dengan fungsi atau peran dari elemen tersebut.

Header dan Footer
Elemen ini dapat kita gunakan untuk:

Sebuah header dan footer utama yang muncul pada awal dan akhir di sebuah halaman <body>. 
Header digunakan sebagai pengantar atau pembuka konten dalam sebuah elemen <article> atau <section>. 
Footer digunakan sebagai catatan kaki pada sebuah elemen <article> atau <section>.

Pada contoh dibawah ini elemen <header> digunakan untuk menampilkan nama situs dan navigasi utama.

Dan elemen <footer> digunakan sebagai informasi hak cipta.

Perlu kita ketahui bahwa elemen <header> dan <footer> tidak boleh ditulis di dalam elemen <header> dan <footer> lainnya (bertumpuk/nested).



Nav
Elemen <nav> digunakan untuk menampung sebuah navigasi yang sifatnya penting (major), contohnya navigasi utama pada sebuah website.

Tapi tidak menjamin pada sebuah website hanya ada satu navigasi. Contohnya, sebuah akhir artikel pada blog terdapat tautan navigasi menuju artikel yang dianggap relevan dengan artikel yang telah kita baca. Navigasi tersebut tidak dianggap sebagai navigasi yang penting, sehingga kita tidak perlu menggunakan elemen <nav> untuk menampilkannya.

Pada pembahasan header dan footer, kita sudah melihat contoh penggunaan dari elemen <nav> yang diletakkan pada elemen <header>. 

Sebuah navigation pada dasarnya sangat berguna untuk aksesibilitas website kita. Contohnya ketika pengguna website kita menggunakan screen reader dalam mengunjungi website, pengguna akan mudah mencari bagian yang dia inginkan tanpa harus menelusuri seluruh konten website.

Articles
Elemen <article> bertindak sebagai container untuk independen konten pada sebuah halaman, artinya konten utuh yang tidak terkait dengan konten lain. Bisa saja konten yang dimasud berupa artikel blog, komentar, forum post, dan konten lainnya.

Jika sebuah halaman terdapat beberapa artikel, maka tiap artikel tersebut seharusnya berada pada elemen article-nya masing-masing.

Elemen <article> dapat berada pada elemen <article> lainnya (nested) selama artikel tersebut berkaitan dengan induk elemen <article> yang menampungnya.



Aside
Elemen <aside> memiliki dua tujuan, tergantung kita menempatkannya di dalam sebuah elemen <article> atau tidak.

Ketika elemen ini ditempatkan di dalam elemen <article>, pada elemen ini dapat berisikan informasi yang berhubungan dengan artikel tersebut, tetapi bukan bagian dari konten artikelnya itu sendiri (dipisahkan dari konten utama). 

Ketika elemen ini ditempatkan di luar dari elemen <article>, pada elemen ini dapat berisikan informasi yang berhubungan pada keseluruhan halaman.

Elemen <aside> biasanya terletak di samping dari sebuah elemen yang menampungnya. 

Section
Sebuah elemen yang memiliki kesamaan konten dan memiliki sebuah heading di dalamnya dapat dikelompokkan dengan menggunakan elemen <section>. Dengan begitu elemen ini dapat digunakan pada sebuah elemen <article> yang memiliki konten panjang dan berpotensi untuk dikelompokkan.

Di dalam sebuah <section> sebaiknya terdapat elemen heading (h1 - h6), yang menjadi elemen pertama yang dituliskan pada sebuah section untuk menunjukkan judul atau tema dari bagian konten yang dikelompokkan.

Generic Element
Setelah mengenal beberapa elemen yang ada, bagaimana jika tidak terdapat elemen sesuai yang mampu menggambarkan konten kita? Dalam dunia nyata, jenis informasi sangat beragam dan mungkin tidak semua semantik elemen yang kalian ketahui dapat menggambarkan jenis informasinya. Untungnya, HTML menyediakan dua tipe elemen umum (generic element) yang bisa kita kustomisasi untuk menggambarkan konten kita dengan tepat. 

Terdapat dua generic elemen yang dapat kita manfaatkan. 

Div
Yang pertama elemen <div>, elemen ini merupakan sebuah wadah (container) yang bersifat umum untuk menampung beberapa konten. Elemen ini tidak akan memberikan efek apapun pada konten atau layout sebelum menerapkan sebuah style menggunakan CSS.
Sebagai sebuah wadah yang murni, elemen <div> tidak merepresentasikan apapun. Elemen ini lebih sering digunakan untuk mengelompokkan sebuah konten sehingga dapat memudahkan styling dengan menggunakan atribut class atau id.

Span
Yang kedua elemen <span>, elemen ini memberikan manfaat yang sama seperti <div>, bedanya elemen ini digunakan sebagai phrase elements dan tidak terdapat line breaks ketika menggunakannya. Sederhananya, <span> merupakan sebuah <div> yang digunakan dalam sebuah baris teks yang dapat diwadahi oleh paragraf, list, heading atau lainnya.

Mari kita ambil contoh. Tidak ada elemen pada inline element yang memiliki arti untuk menampung sebuah informasi telepon. Maka dari itu, tiap item pada nomor telepon bisa ditampung dalam elemen <span> dan diklasifikasikan (menggunakan atribut class) dengan nilai “phone”.

Mengorganisasikan Konten pada Halaman Profil
Kita sudah mengenal beberapa elemen yang digunakan untuk mengorganisasikan halaman, seperti <header>, <footer>, <article>, dan yang lainnya. Dan juga kita sudah mengenal generic elemen yang digunakan untuk mengelompokkan elemen secara umum. Sekarang saatnya kita mengorganisasikan pada halaman profil yang sudah kita buat sebelumnya.

Sebelum mengorganisasikan konten, mari kita tambahkan sebuah konten untuk diterapkan pada elemen <aside> nantinya. Unduh terlebih dahulu aset gambar yang akan digunakan pada tautan berikut: https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Bandung_coa.png/279px-Bandung_coa.png

Simpanlah gambar tersebut pada folder assets -> images bersama dengan empat gambar yang lain dan beri nama bandung-badge.png.

Menetapkan Elemen <header>, <main> dan <footer>.
Mari kita buat konten yang berada pada body menjadi tiga bagian besar yaitu heading, main dan footer. Kelompokkan konten judul besar dan navigasi menggunakan elemen <header>.

Sebelumnya, kita mengetahui bahwa elemen list yang dibuat nantinya akan dijadikan sebuah navigasi, maka di dalam elemen header ini, kita tambahkan elemen <nav> untuk membungkus elemen list. 

Kemudian pada konten copyright (konten paragraf paling akhir pada sebuah body) yang kita tambahkan sebelumnya, masukkan konten tersebut ke dalam elemen <footer>.

Terakhir, kelompokkan seluruh konten yang terdapat di antara elemen <header> dan elemen <footer> dengan menggunakan elemen <main>.

Table
Ada beberapa jenis informasi yang perlu ditampilkan dalam bentuk tabel, contohnya klasmen olahraga atau sebuah jadwal layaknya kalender. Ketika kita membuat sebuah tabel, pastinya kita akan banyak bermain dengan baris dan kolom. Pada materi ini kita akan belajar bagaimana cara membuat dan mengorganisir sebuah tabel pada HTML.

Tapi sebelum itu, apa sih sebenarnya tabel dalam HTML itu? Elemen <table> pada HTML merepresentasikan data tabular atau informasi yang disajikan dalam sebuah tabel. Tabel sendiri disajikan dalam dua dimensi yang terdiri dari baris dan kolom (cell) yang berisikan sebuah data. Berikut contoh data sepakbola yang disajikan dalam bentuk tabel.

Struktur Dasar Sebuah Tabel
Tabel pada HTML disusun dari tiga buah elemen, yaitu <table>, <tr> ,dan <td> atau <th>. Elemen <table> digunakan untuk menandakan dimulai dan diakhirinya sebuah konten tabel dan juga sebagai wadah untuk tabel itu sendiri. Kemudian, elemen <tr> digunakan untuk membuat sebuah baris baru yang di dalamnya terdapat elemen <td> atau <th> sehingga menghasilkan sebuah cell.

Elemen <td> yang berarti “table data” selain membuat cell elemen ini juga merupakan tempat di mana data pada tabel ditampung. Selanjutnya untuk elemen <th> atau “table header” digunakan untuk menentukan sebuah header pada kolom datanya. Untuk lebih jelasnya perhatikan ilustrasi berikut:

Spanning Cell
Terkadang kita membutuhkan sebuah sel yang mencakup untuk dua kolom ataupun dua baris sekaligus. Dalam aplikasi seperti Microsoft Word, hal ini biasa kita kenal sebagai merging cell atau menggabungkan sebuah sel. Ini memang menjadi sebuah fitur dasar dalam membuat sebuah tabel. Sehingga, pada HTML pun kita dapat melakukan hal tersebut. 

Pada HTML hal ini lebih dikenal sebagai Spanning cell yang artinya menjangkau atau merentangkan sebuah ukuran sel lebih dari ukuran yang biasanya. Dengan spanning cell kita dapat membuat sebuah tabel yang lebih kompleks, tetapi akan membuat markup yang kita tulis menjadi sedikit sulit dibaca.



Column Spans
Untuk merentangkan sebuah kolom (column spanning) kita bisa menggunakan atribut colspan pada elemen <td> atau <th>. Berikut contoh untuk penggunaan colspan sehingga sebuah header mencangkup dua kolom.

Maka sebuah elemen yang menggunakan atribut colspan akan mencakup ruang kolom sesuai nilai dari atribut itu sendiri.

Untuk lebih jelasnya, kita bisa tambahkan atribut border pada elemen <table> agar terdapat garis pada tepi selnya.

Row Spans
Untuk merentangkan sebuah baris (row spanning) kita dapat menggunakan atribut rowspan. Sama seperti column spanning, tetapi atribut ini akan merentangkan sebuah sel ke bawah. Berikut contohnya.

Elemen dan Atribut

Description

table

Menetapkan elemen tabel.

td

Menetapkan sebuah sel dalam baris tabel.


colspan=”number”

Jumlah kolom yang dicakup oleh sel.


rowspan=”number”

Jumlah baris yang dicakup oleh sel.


headers=”nama header”

Mengasosiasikan data sel dengan header.

th

Menetapkan header yang terkait dengan baris atau kolom.


colspan=”number”

Jumlah kolom dicakup oleh header.


rowspan=”number”

Jumlah row yang dicakup oleh header.


headers=”nama header”

Mengasosiasikan header dengan header lain.


scope=”row|col|rowgroup|colgroup”

Mengasosiasikan header dengan baris, kelompok baris, kolom atau kelompok kolom.

tr

Menetapkan sebuah baris pada tabel.

caption

Memberikan judul pada sebuah tabel.

col

Menetapkan sebuah kolom.

colgroup

Menetapkan sebuah kelompok kolom.

tbody

Mengidentifikasi sebuah body dalam tabel.

tfoot

Mengidentifikasi sebuah footer dalam tabel.

thead

Mengidentifikasi sebuah header dalam tabel.

Menerapkan Elemen Tabel pada Halaman Profil
Setelah kita mengetahui cara menerapkan tabel pada website, mari kita perkaya kembali konten pada halaman profil, khususnya konten pada elemen <aside> yang sudah kita buat. Kita akan menambahkan detail informasi dari kota Bandung seperti negara luas, bahasa daerah, dan kode telepon. 

Tapi sebelum itu mari kita atur kembali struktur elemen yang di dalam elemen <aside> tersebut. Saat ini elemen <aside> memiliki struktur seperti ini:


Special Character
Terdapat beberapa karakter spesial seperti copyright symbol © yang tidak termasuk ke dalam standar kelompok ASCII characters, di mana ASCII characters hanya menyediakan karakter seperti huruf, nomor, dan beberapa simbol dasar. Karakter lain seperti lebih dari (>) atau kurang dari (<) walaupun tersedia dalam ASCII character, karakter tersebut tidak dapat digunakan secara langsung sebagai konten pada HTML. Hal tersebut dikarenakan karakter tersebut akan terbaca sebagai sebuah tag.

Untuk menampilkan karakter seperti yang disebutkan tadi, HTML memerlukan sebuah “escaped” karakter. Escaping artinya adalah tidak menuliskan karakter itu sendiri, melainkan menggantinya dengan nilai numeric atau character reference pada karakternya.

Terdapat dua cara untuk melakukannya, yakni dengan menetapkan nilai numerik (numeric entity) atau menggunakan nama singkatan yang sudah ditetapkan untuk masing-masing karakternya (named entity). Semua referensi karakter dimulai dengan “&” dan diakhiri dengan “;”.

Contohnya untuk menggunakan simbol copyright, kita dapat menggunakan “&copy” 

Karakter

Deskripsi

Named Entity

Numeric Entity


non-breaking space

&nbsp;

&#160;

&

Ampersand

&amp;

&#038;

’

Apostrophe

&apos;

&#039;

<

Kurang dari (less-than)

&lt;

&#060;

>

Lebih dari (greater-than)

&gt;

&#062;

©

Hak cipta (copyright)

&copy;

&#169;

®

Merek dagang terdaftar (registered trademark)

&reg;

&#174;

™

Merek dagang (trademark)

&trade;

&#8482;

£

Pound

&pound;

&#163;

¥

Yen

&yen;

&#165;

€

Euro

&euro;

&#8364;

–

En-dash

&ndash;

&#8211;

—

Em-dash

&mdash;

&#8212;

‘

Kutip tunggal kiri

&lsquo;

&#8216;

’

Kutip tunggal kanan

&rsquo;

&#8217;

“

Kutip ganda kiri

&ldquo;

&#8221;

”

Kutip ganda kanan

&rdquo;

&#8221;

•

Bullet

&bull;

&#8226;

...

Horizontal ellipsis

&hellip;

&#8230;

